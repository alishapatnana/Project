{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/user/user.component.html","./src/app/user/user.component.ts","./src/app/tweet/reply-tweet/reply-tweet.component.ts","./src/app/tweet/reply-tweet/reply-tweet.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/tweet/post-tweet/post-tweet.component.ts","./src/app/tweet/post-tweet/post-tweet.component.html","./src/app/user/view-user.model.ts","./src/app/tweet/tweet.service.ts","./src/app/user/user.model.ts","./src/app/email-verification/email-verification.component.ts","./src/app/email-verification/email-verification.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/tweet/edit-tweet/edit-tweet.component.ts","./src/app/tweet/edit-tweet/edit-tweet.component.html","./src/app/tweet/reply.model.ts","./src/app/user/search-user/search-user.component.html","./src/app/user/search-user/search-user.component.ts","./src/app/user/user.service.ts","./src/app/profile/profile.component.html","./src/app/profile/profile.component.ts","./src/app/auth-guard.ts","./src/app/tweet/tweet-items/tweet-items.component.html","./src/app/tweet/tweet-items/tweet-items.component.ts","./src/app/profile/updateProfile/update-profile.component.ts","./src/app/profile/updateProfile/update-profile.component.html","./src/app/register/reset-password/reset-password.component.html","./src/app/register/reset-password/reset-password.component.ts","./src/app/app.module.ts","./src/app/user/notify-user/notify-user.component.html","./src/app/user/notify-user/notify-user.component.ts","./src/app/auth.service.ts","./src/app/tweet/my-tweets/my-tweets.component.html","./src/app/tweet/my-tweets/my-tweets.component.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/app-routing.module.ts","./src/app/tweet/tweet.component.html","./src/app/tweet/tweet.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { JsonpClientBackend } from '@angular/common/http';\nimport { AfterViewInit, Component, OnChanges, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { User } from '../user/user.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit{\n  displayStyle: string= 'none';\n  loginForm: boolean = false;\n  errorMessage = '';\n  successfullMessage = '';\n  userOtp:any;\n  userMail:string;\n  constructor(private authService: AuthService, private router: Router) { }\n  options = [\n    {key: 1, value:\"Favorite Movie\"},\n    {key: 2, value:\"Favorite Color\"},\n    {key: 3, value:\"Favorite Cuisine\"},\n    {key: 4, value:\"Favorite Sport\"}\n  ]\n  ngOnInit(): void {\n  }\n  closePopup(){\n    this.successfullMessage = '';\n    this.errorMessage = '';\n    this.displayStyle = 'none';\n  }\n\n  onLoginClick(){\n    this.displayStyle = 'block';\n    this.loginForm = true;\n  }\n\n  onSignUpClick(){\n    this.displayStyle = 'block';\n    this.loginForm = false;\n  }\n\n  onLogin(form : NgForm){\n    this.authService.login(form.value.email, form.value.password).subscribe((response) =>{\n      this.closePopup();\n      localStorage.setItem('user', response.emailId);\n      //this.router.navigate(['tweetapp/','home']);\n      this.userMail = localStorage.getItem('user') as string;\n      this.authService.mailSend(this.userMail);\n      this.router.navigate(['tweetapp/email-verification']);\n    }, error => {\n      this.errorMessage = error;\n    });\n    form.reset();\n  }\n\n  onSignUp(form: NgForm){\n    if(!form.valid){\n      this.errorMessage = \"Please fill all the fields!\";\n      return;\n    }\n    if(form.value.password != form.value.confirmPassword){\n      this.errorMessage = \"Password and Confirm Password should be same!\";\n      return;\n    }\n    const userDetail = new User(\n      form.value.email, \n      form.value.dateOfBirth, \n      form.value.gender, \n      form.value.password, \n      form.value.confirmPassword, \n      form.value.firstName,\n      form.value.lastName,\n      +form.value.question,\n      form.value.answer);\n      this.authService.signUp(userDetail).subscribe((responseData) => {\n        this.successfullMessage = 'Registration Successfull!';\n        form.reset();\n      },error => {\n        this.errorMessage = \"Email already Exists!\";\n      });\n  }\n}","<section class=\"vh-100\">\n  <div class=\"container-fluid h-custom\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col-md-9 col-lg-6 col-xl-5\">\n        <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp\"\n          class=\"img-fluid\" alt=\"Sample image\">\n      </div>\n      <div class=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n        <div class=\"brand-wrapper d-flex justify-content-center\">\n          <img src=\"https://img.icons8.com/fluency/50/000000/twitter.png\">\n        </div>\n        <div class=\"right\">\n          <div class=\"first-button\">\n            <button class=\"btn-login\" (click)=\"onLoginClick()\">Login</button>\n          </div>\n          <div class=\"second-button\">\n            <button class=\"btn-signup\" (click)=\"onSignUpClick()\">Signup</button>\n          </div>   \n        </div>\n      </div>\n      <div class=\"modal\" tabindex=\"-1\" role=\"dialog\" [ngStyle]=\"{'display':displayStyle}\">\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h4 class=\"modal-title\">{{ loginForm ? 'Login' : 'SignUp' }}</h4>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loginForm\">\n              <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\n                {{ errorMessage }}\n              </div>\n              <form #authForm=\"ngForm\" (ngSubmit)=\"onLogin(authForm)\">\n                <div class=\"form-group\">\n                  <label for=\"email\">Email address</label>\n                  <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  id=\"email\"\n                  name=\"email\" \n                  placeholder=\"Enter Email Address\"\n                  required\n                  email\n                  ngModel>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"password\">Password</label>\n                  <input \n                    type=\"password\" \n                    class=\"form-control\" \n                    id=\"password\" \n                    placeholder=\"Enter Password\"\n                    name=\"password\"\n                    ngModel\n                    required\n                    minlength=\"6\">\n                </div>\n                <div class=\"login-button\">\n                  <button class=\"btn btn-primary\" [disabled]=\"!authForm.valid\">Login</button>\n                  <a class=\"forgot-password\" [routerLink]=\"['reset-password']\">Forgot Password ?</a>\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loginForm\">\n              <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\n                {{ errorMessage }}\n              </div>\n              <div class=\"alert alert-success\" *ngIf=\"successfullMessage\">\n                {{ successfullMessage }}\n            </div>\n              <form #signUpForm=\"ngForm\" (ngSubmit)=\"onSignUp(signUpForm)\">\n                <div class=\"form-group\">\n                  <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  id=\"email\"\n                  name=\"email\" \n                  placeholder=\"Email Address\"\n                  required\n                  email\n                  ngModel>\n                </div>\n                <div class=\"form-group\">\n                  <input \n                    type=\"password\" \n                    class=\"form-control\" \n                    id=\"password\" \n                    placeholder=\"Password (min 6 characters)\"\n                    name=\"password\"\n                    ngModel\n                    required\n                    minlength=\"6\">\n                </div>\n                <div class=\"form-group\">\n                  <input \n                    type=\"password\" \n                    class=\"form-control\" \n                    id=\"confirmPassword\" \n                    placeholder=\"Confirm Password (same as Password)\"\n                    name=\"confirmPassword\"\n                    ngModel\n                    required\n                    minlength=\"6\">\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <input \n                      type=\"text\" \n                      class=\"form-control\" \n                      id=\"firstName\" \n                      placeholder=\"First Name\"\n                      name=\"firstName\"\n                      ngModel\n                      required\n                      >\n                  </div>\n                  <div class=\"col\">\n                      <input \n                        type=\"text\" \n                        class=\"form-control\" \n                        id=\"lastName\" \n                        placeholder=\"Last Name\"\n                        name=\"lastName\"\n                        ngModel\n                        >\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"dateOfBirth\">Date Of Birth</label>\n                  <input \n                    type=\"date\" \n                    class=\"form-control\" \n                    required \n                    name=\"dateOfBirth\" \n                    id=\"dateOfBirth\"\n                    ngModel>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"gender\">Gender</label>\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"Male\" id=\"genderMale\" ngModel>\n                    <label class=\"form-check-label\" for=\"gender\">\n                      Male\n                    </label>\n                  </div>\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"Female\" id=\"genderFemale\" ngModel>\n                    <label class=\"form-check-label\" for=\"gender\">\n                      Female\n                    </label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                      <select class=\"form-select\" \n                              required \n                              name=\"question\"\n                              ngModel\n                              #question=\"ngModel\"\n                              >\n                          <option value=\"\" disabled> - Select Security Question - </option>\n                          <option *ngFor=\"let option of options\" [value]=\"option.key\">{{ option.value }}</option>\n                      </select>\n                  </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <input \n                            type=\"text\" \n                            class=\"form-control\" \n                            placeholder=\"Security Selected Question's Answer\" \n                            required\n                            name=\"answer\"\n                            ngModel\n                            #answer=\"ngModel\">\n                    </div>\n                 </div>\n                <div class=\"login-button\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-danger\" \n                      (click)=\"closePopup()\">\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"d-flex flex-column flex-md-row text-center text-md-start justify-content-between py-4 px-4 px-xl-5 bg-primary\">\n    <!-- Copyright -->\n    <div class=\"text-white mb-3 mb-md-0\">\n      Tweet © 2022. All rights reserved.\n    </div>\n    <!-- Copyright -->\n  </div>\n</section>","<section class=\"align-section\" style=\"background-color: #f4f5f7;\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex h-100\">\n        <div class=\"col col-lg-6 mb-4 mb-lg-0\">\n          <form #updateForm=\"ngForm\" (ngSubmit)=\"onSubmit(updateForm)\">\n            <div class=\"row pt-1\" >\n              <div class=\"input-group mb-3\">\n                <div class=\"input-group-prepend\">\n                  <button class=\"btn\" value=\"search\"> <span class=\"material-icons align-middle\">search</span></button>\n                </div>\n                <input type=\"text\" class=\"form-control\"  id=\"search\" name=\"search\" placeholder=\"Search...\" [(ngModel)]=\"search\">\n                \n            </div>         \n            </div>           \n          </form>  \n          <h4>People you may know....</h4>        \n          <div class=\"card mb-3\" style=\"border-radius: .5rem;\"  *ngFor=\"let userDetail of users\">\n            <div class=\"row g-0\">\n              <div class=\"col-md-4 gradient-custom text-center text-white\" style=\"border-top-left-radius: .5rem; border-bottom-left-radius: .5rem;\">                \n                <span *ngIf=\"userDetail?.gender=='Male'\">\n                  <img src=\"../../assets/male.jpg\" alt=\"Avatar\" class=\"img-fluid my-5\" style=\"width: 80px;\"\n                />\n                </span>\n                <span *ngIf=\"userDetail?.gender=='Female'\">\n                  <img src=\"../../assets/female.jpg\" alt=\"Avatar\" class=\"img-fluid my-5\" style=\"width: 80px;\"\n                />\n                </span>                \n                <h5 style=\"font-weight: bold; color: black;\">{{ userDetail?.firstName }}</h5>\n              </div>\n              <div class=\"col-md-8\">\n                <div class=\"card-body p-4\">\n                  <h6>Information</h6>\n                  <hr class=\"mt-0 mb-4\">\n                  <div class=\"row pt-1\">\n                    <div class=\"col-6 mb-3\">\n                      <h6>Email</h6>\n                      <p class=\"text-muted\">{{ userDetail?.emailId }}</p>\n                    </div>\n                    <div class=\"col-6 mb-3\">\n                      <h6>Date Of Birth</h6>\n                      <p class=\"text-muted\">{{ userDetail?.dateOfBirth | date: 'shortDate'}}</p>\n                    </div>\n                  </div>\n                  <div class=\"row pt-1\">\n                    <div class=\"col-6 mb-3\">\n                      <h6>Name</h6>\n                      <p class=\"text-muted\">{{ userDetail?.firstName }} {{ userDetail?.lastName }}</p>\n                    </div>\n                    <div class=\"col-6 mb-3\">\n                      <h6>Gender</h6>\n                      <p class=\"text-muted\">{{ userDetail?.gender }}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { User } from './user.model';\nimport { UserService } from './user.service';\nimport { ViewUser } from './view-user.model';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit, OnDestroy {\n  users: ViewUser[];\n  allUserSubscription : Subscription;\n  constructor(private userService: UserService, private router: Router) { }\n  search : string;\n  ngOnInit(): void {\n    this.userService.getAllUsers();\n    this.allUserSubscription = this.userService.allUsers.subscribe((users) => {\n      this.users = users;\n      console.log(users);\n    });\n  }\n\n  ngOnDestroy(){\n    this.allUserSubscription.unsubscribe();\n  }\n\n  onSubmit(form : NgForm){\n    this.search = form.value.search;\n    if(this.search == undefined){\n      this.router.navigate(['tweetapp/home/users']).then(() => {\n        window.location.reload();\n      });\n    }\n    else{\n      this.router.navigate(['tweetapp/home/users/search-user/'+this.search]).then(() => {\n        window.location.reload();\n      });\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Reply } from '../reply.model';\nimport { Tweet } from '../tweet.model';\nimport { TweetService } from '../tweet.service';\n\n@Component({\n  selector: 'app-reply-tweet',\n  templateUrl: './reply-tweet.component.html',\n  styleUrls: ['./reply-tweet.component.css']\n})\nexport class ReplyTweetComponent implements OnInit, OnDestroy {\n  @ViewChild('f') form:NgForm;\n  private isChanges: Subscription;\n  tweet: Tweet;\n  id: string;\n  reply: boolean;\n  userGender:string = localStorage.getItem('gender') as string;\n  constructor(private tweetService: TweetService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (param: Params) =>{\n        this.id = param['id'];\n        this.tweetService.getTweetById(this.id);\n      }\n    );\n\n    this.isChanges =  this.tweetService.tweetChanged.subscribe((tweetUpdated) => {\n      this.tweet = tweetUpdated;\n      this.reply = tweetUpdated != undefined ? tweetUpdated.replies.length > 0 : false;\n    });\n  }\n\n  onReply(){\n    const value = this.form.value;\n    const reply = new Reply(value.replyText);\n    this.tweetService.addReply(reply, this.id);\n    this.form.reset();\n  }\n\n\n  ngOnDestroy(): void {\n      this.isChanges.unsubscribe();\n  }\n  OnNavigate(){\n    this.router.navigate(['tweetapp/','home']);\n  }\n  calculateDiff(dateSent:any){\n    let currentDate = new Date();\n    dateSent = new Date(dateSent);\n    return Math.floor((Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate()) - Date.UTC(dateSent.getFullYear(), dateSent.getMonth(), dateSent.getDate()) ) /(1000 * 60 * 60 * 24));\n}\n}\n","<div class=\"feed\">\n    <div class=\"feed__header\">\n      <h2>Tweet</h2> \n    </div>\n    <div class=\"post\">\n        <div class=\"post__avatar\">\n          <img src=\"../../assets/profile.jpg\" alt=\"\"/>\n        </div>\n      \n        <div class=\"post__body\">\n          <div class=\"post__header\">\n            <div class=\"post__headerText\">\n              <h3>\n                @{{ tweet?.firstName }}\n                <span class=\"post__headerSpecial\">\n                  <span class=\"material-icons post__badge\"> verified </span></span>\n                <span style=\"position: relative; float: right;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clock\" viewBox=\"0 0 16 16\">\n                  <path d=\"M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z\"/>\n                  <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z\"/>\n                </svg><i class=\"bi bi-clock\"></i> {{ calculateDiff(tweet.dateAndTimeOfTweet) }} d</span>\n              </h3>\n              \n            </div>\n            <div class=\"post__headerDescription\">\n              <p>{{ tweet?.tweetText }}</p>\n            </div>\n          </div>\n      </div>\n    </div>\n    <div class=\"tweetBox\">\n        <form (ngSubmit) = \"onReply()\" #f=\"ngForm\">\n            <div class=\"tweetbox__input\">\n                <img src=\"../../assets/profile.jpg\" alt=\"\"/>\n                <textarea \n                    placeholder=\"Reply on tweet!\"\n                    rows=\"3\" \n                    name=\"replyText\" \n                    ngModel\n                    required\n                    maxlength=\"144\"\n                    #replyText=\"ngModel\">\n                </textarea>\n                <!-- <textarea  id=\"\" style=\"width: 100%; height: 200px; border: none;\" placeholder=\"What's happening?\"></textarea> -->\n            </div>\n            <button \n            class=\"tweetBox__tweetButton\"\n            [disabled]=\"!f.valid\">Reply</button>\n        </form>\n        <div class=\"indicator\">\n            <span class=\"replylength-indicator valid-input\">{{ replyText?.value?.length ? replyText?.value?.length : 0 }}/144</span>\n        </div>\n    </div>\n    <div class=\"feed__header\">\n      <h5><b>Replies</b></h5> \n    </div>\n    <div class=\"post\" \n    *ngFor=\"let tweetReply of tweet?.replies\">\n        <div class=\"post__avatar\">\n          <img src=\"../../assets/profile.jpg\" alt=\"\"/>\n        </div>\n      \n        <div class=\"post__body\">\n          <div class=\"post__header\">\n            <div class=\"post__headerText\">\n              <h3>\n                @{{ tweetReply.firstName }}\n                <span class=\"post__headerSpecial\"\n                  ><span class=\"material-icons post__badge\"> verified </span></span\n                >\n                <span style=\"position: relative; float: right;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clock\" viewBox=\"0 0 16 16\">\n                  <path d=\"M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z\"/>\n                  <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z\"/>\n                </svg><i class=\"bi bi-clock\"></i> {{ calculateDiff(tweet.dateAndTimeOfTweet) }} d</span>\n              </h3>\n            </div>\n            <div class=\"post__headerDescription\">\n              <p>{{ tweetReply.replyText }}</p>\n            </div>\n          </div>\n      </div>\n    </div>\n    <div class=\"post\" *ngIf=\"!reply\">\n        <h4 style=\"padding-left: 250px;\">No reply found!</h4>\n    </div>\n    <button class=\"tweetBox__tweetButton\" (click)=\"OnNavigate()\">Back</button>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  currentSelected : string = 'Home';\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"jumbotron\">\n    <h1 class=\"display-4 alert alert-danger\">Invalid Request!</h1>\n    <p class=\"lead\">The Page you requested is not found!</p>\n    <hr class=\"my-4\">\n    <p>Click below to return to the homepage!</p>\n    <p class=\"lead\">\n      <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Home</a>\n    </p>\n</div> -->\n\n<div class=\"container\">\n    <div class=\"alert alert-dark\" role=\"alert\">\n        <h4 class=\"alert-heading alert alert-danger\">Invalid Request!</h4>\n        <p>The Page you requested is not found!</p>\n        <hr>\n        <p class=\"mb-0\">Click below to return to the homepage!</p>\n        <a class=\"btn btn-primary btn-lg\" [routerLink]=\"['../', 'home']\">Home</a>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Tweet } from '../tweet.model';\nimport { TweetService } from '../tweet.service';\n\n@Component({\n  selector: 'app-post-tweet',\n  templateUrl: './post-tweet.component.html',\n  styleUrls: ['./post-tweet.component.css']\n})\nexport class PostTweetComponent implements OnInit {\n  @ViewChild('f') form: NgForm;\n  userId : string | null;\n  userGender:string = localStorage.getItem('gender') as string;\n  constructor(private tweetService: TweetService) { }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem('user');\n  }\n\n  onSubmit(){\n   \n    if(this.userId!=null){\n      this.tweetService.postTweet(this.userId, this.form.value.tweetText);\n    }\n    else{\n      return;\n    }\n    this.form.reset();\n  }\n}\n","<div class=\"tweetBox\">\n    <form (ngSubmit)=\"onSubmit()\" #f=\"ngForm\">\n        <div class=\"tweetbox__input\">\n            <img src=\"../../assets/profile.jpg\" alt=\"\"/>\n            <textarea \n            placeholder=\"What's happening?\"\n             rows=\"3\"\n             required\n             name=\"tweetText\"\n             ngModel\n             #tweetText=\"ngModel\"\n             maxlength=\"144\"></textarea>\n            <!-- <textarea  id=\"\" style=\"width: 100%; height: 200px; border: none;\" placeholder=\"What's happening?\"></textarea> -->\n        </div>\n        <button class=\"tweetBox__tweetButton\" [disabled]=\"!tweetText.valid\">Tweet</button>\n    </form>\n    <div class=\"indicator\">\n        <span class=\"replylength-indicator valid-input\">{{ tweetText?.value?.length ? tweetText?.value?.length : 0 }}/144</span>\n    </div>\n</div>","export class ViewUser{\n    constructor(public emailId: string,\n        public dateOfBirth: Date,\n        public gender: string,\n        public firstName: string,\n        public lastName: string){\n    }\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Variable } from \"@angular/compiler/src/render3/r3_ast\";\nimport { Injectable } from \"@angular/core\";\nimport { waitForAsync } from \"@angular/core/testing\";\nimport { Subject } from \"rxjs\";\nimport { Reply } from \"./reply.model\";\nimport { Tweet } from \"./tweet.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TweetService{\n\n    constructor(private http: HttpClient){}\n    tweetChanged = new Subject<Tweet>();\n    allTweets = new Subject<Tweet[]>();\n    private tweets: Tweet[];\n    count:string;\n    \n    getAllTweets(){\n        let tweets: Tweet[];\n        this.http.get<Tweet[]>('http://localhost:48897/api/v1.0/tweets/all').subscribe((responseData) => {\n            tweets = responseData;\n            this.allTweets.next(tweets);\n\n        });\n    }\n\n    getTweetById(id: string){\n        let tweet: Tweet;\n        this.http.get<Tweet>('http://localhost:48897/api/v1.0/tweets/tweet/'+id).subscribe((responseData) => {\n            this.tweetChanged.next(responseData);\n        });\n    }\n\n    addReply(reply: Reply, tweetId: string){\n        // this.tweets.find(x => x.id == tweetId)?.replies.push(reply);\n        // this.tweetChanged.next(this.tweets.slice().find(x => x.id == tweetId));\n        let userId = localStorage.getItem('user');\n        this.http.put('http://localhost:48897/api/v1.0/tweets/'+ userId + '/reply/'+tweetId, { tweetText : reply.replyText})\n        .subscribe((response) => {\n            this.getTweetById(tweetId);\n        });\n    }\n\n    postTweet(userId: string | null, tweetText: string){\n       this.http.post('http://localhost:48897/api/v1.0/tweets/'+ userId +'/add', {tweetText: tweetText}).subscribe((response) => {\n           this.getAllTweets();\n       });\n    }\n\n    editTweet(tweetText: string, tweetId: string){\n        this.http.put('http://localhost:48897/api/v1.0/tweets/update/'+ tweetId, { tweetText : tweetText})\n        .subscribe((response) => {\n            this.getAllTweets();\n        });\n    }\n\n    getTweetByUserId(userId: string){\n        let tweets: Tweet[];\n        this.http.get<Tweet[]>('http://localhost:48897/api/v1.0/tweets/'+userId).subscribe((responseData) => {\n            tweets = responseData;\n            this.allTweets.next(tweets);\n        });\n    }\n\n    deleteTweetFromHome(tweetId: string){\n        this.http.delete('http://localhost:48897/api/v1.0/tweets/delete/' + tweetId).subscribe((response) => {\n            this.getAllTweets();\n        });\n    }\n\n    deleteTweetFromMyTweet(tweetId: string, userId: string){\n        this.http.delete('http://localhost:48897/api/v1.0/tweets/delete/' + tweetId).subscribe((response) => {\n            this.getTweetByUserId(userId);\n        });\n    }\n\n    likeOrDisLikeTweet(tweetId: string, userId: string){\n        this.http.put('http://localhost:48897/api/v1.0/tweets/'+userId+'/like/'+tweetId, null).subscribe((response) => {\n            this.getTweetByUserId(userId);\n        });\n    }\n\n    inActivateReply( userId: string){\n        this.http.put('http://localhost:48897/api/v1.0/tweets/inactivateReply/'+ userId , null).subscribe((response) => {\n            this.getAllTweets();\n        });\n    }\n\n    getActiveReplies( userId: string){  \n        return this.http.get<any>('http://localhost:48897/api/v1.0/tweets/activeReplies/'+ userId).subscribe((data)=>{\n           localStorage.setItem('count',data);\n       });  \n    }\n}","export class User{\n    constructor(public emailId: string, \n        public dateOfBirth: Date, \n        public gender: string, \n        public password: string, \n        public confirmPassword: string, \n        public firstName: string, \n        public lastName: string,\n        public securityQuestion: number,\n        public securityAnswer: string){\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-email-verification',\n  templateUrl: './email-verification.component.html',\n  styleUrls: ['./email-verification.component.css']\n})\nexport class EmailVerificationComponent implements OnInit {\n  userOtp:string;\n  userEnterOtp:string;\n  userMail:string;\n  constructor(private router: Router,private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n  onValidate(form : NgForm){\n  this.userEnterOtp = form.value.otp;\n  this.userOtp = localStorage.getItem('userOtp') as string;\n  if(this.userEnterOtp === this.userOtp){\n    this.router.navigate(['tweetapp/home']);\n  }\n  else{\n    this.router.navigate(['tweetapp/email-verification']);\n    form.reset();\n  }\n  }\n  sendMail(){\n    this.userMail = localStorage.getItem('user') as string;\n    this.authService.mailSend(this.userMail);\n    this.router.navigate(['tweetapp/email-verification']);\n  }\n}\n","<div class=\"container height-100 d-flex justify-content-center align-items-center\">\n    <div class=\"position-relative\"> \n        <div class=\"card p-2 text-center\"> \n            <h6>Please enter the one time password <br> to verify your account</h6> \n            <span>A code has been sent to your registered mail!</span>\n            <br>\n            <div> \n                <form #authForm=\"ngForm\" (ngSubmit)=\"onValidate(authForm)\">\n                    <div class=\"form-group\">\n                        <div class=\"input-group mb-3\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter OTP\" aria-label=\"otp\" aria-describedby=\"basic-addon1\" id=\"otp\" name=\"otp\" otp required ngModel maxlength=\"6\">\n                          </div>\n                        <div class=\"mt-4\"> \n                            <button class=\"btn btn-danger px-4 validate\">Validate</button> \n                        </div> \n                    </div>\n                </form>\n                 <div class=\"card-2\"> \n                     <div class=\"content d-flex justify-content-center align-items-center\"> \n                        <span>Didn't get the code</span> \n                        <a class=\"text-decoration-none ms-3\" [routerLink]=\"['tweetapp/email-verification']\" (click)=\"sendMail()\">Resend</a> \n                        </div> \n                    </div> \n                </div>\n            </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'tweet-app';\n  textInput = '';\n  isLoggedIn = false;\n  userLogin : Subscription;\n  constructor(private authService: AuthService){\n  }\n\n  ngOnInit(){\n   \n  }\n\n  ngOnDestroy(){\n    this.userLogin.unsubscribe();\n  }\n\n}\n","<!-- <div class=\"main-container\">\n   <app-header *ngIf=\"isLoggedIn\"></app-header>\n   <router-outlet></router-outlet>\n</div> -->\n<router-outlet></router-outlet>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Tweet } from '../tweet.model';\nimport { TweetService } from '../tweet.service';\n\n@Component({\n  selector: 'app-edit-tweet',\n  templateUrl: './edit-tweet.component.html',\n  styleUrls: ['./edit-tweet.component.css']\n})\nexport class EditTweetComponent implements OnInit {\n  @ViewChild('f') editForm: NgForm;\n  tweetItem : Tweet;\n  tweetId : string;\n  editedText : string = '';\n  tweetSubscription : Subscription;\n  userGender:string = localStorage.getItem('gender') as string;\n  constructor(private tweetService: TweetService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param : Params) =>{\n      this.tweetId = param['id'];\n      this.tweetService.getTweetById(this.tweetId);\n    });\n\n    this.tweetSubscription = this.tweetService.tweetChanged.subscribe((tweet) =>{\n      this.tweetItem = tweet;\n      this.editedText = this.tweetItem.tweetText;\n    });\n  }\n\n  onUpdate(form: NgForm){\n      this.tweetService.editTweet(form.value.tweetText,this.tweetId);\n      this.router.navigate(['tweetapp','home']);\n  }\n\n}\n","<div class=\"feed\">\n    <div class=\"feed__header\">\n      <h2>Edit Tweet</h2> \n    </div>\n    <div class=\"tweetBox\">\n        <form (ngSubmit) = \"onUpdate(f)\" #f=\"ngForm\">\n            <div class=\"tweetbox__input\">\n                <img src=\"../../assets/profile.jpg\" alt=\"\"/>\n                <textarea\n                placeholder=\"Edit Tweet!\"\n                id=\"tweetText\"\n                required\n                maxlength=\"144\"\n                rows=\"3\"\n                [(ngModel)]=\"editedText\"\n                name=\"tweetText\"\n                #tweetText>\n                </textarea>\n                \n                <!-- <textarea  id=\"\" style=\"width: 100%; height: 200px; border: none;\" placeholder=\"What's happening?\"></textarea> -->\n            </div>\n            <button class=\"tweetBox__tweetButton\" [disabled]=\"!f.valid\">Update</button>\n            <div class=\"indicator\">\n                <span class=\"replylength-indicator valid-input\">{{ editedText.length }}/144</span>\n            </div>\n        </form>\n    </div>\n</div>","export class Reply{\n    public replyText: string;\n    public userId: string;\n    public dateAndTimeOfReply: Date;\n    public firstName: string;\n    public lastName: string;\n    public notification : boolean\n\n    constructor(replyText: string, userId: string = \"\", dateAndTimeOfReply: Date = new Date(), firstName: string = \"\", lastName: string=\"\"){\n        this.replyText=replyText;\n        this.userId=userId;\n        this.dateAndTimeOfReply = dateAndTimeOfReply;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.notification=true;\n    }\n}","<section class=\"align-section\" style=\"background-color: #f4f5f7;\">\n  <button class=\"tweetBox__tweetButton\" (click)=\"OnNavigate()\">Back</button>\n  <div class=\"container py-5 h-100\">\n    <div class=\"row d-flex h-100\">\n      <div class=\"col col-lg-6 mb-4 mb-lg-0\">               \n        <div class=\"card mb-3\" style=\"border-radius: .5rem;\"  *ngFor=\"let userDetail of users\">\n          <div class=\"row g-0\">\n            <div class=\"col-md-4 gradient-custom text-center text-white\" style=\"border-top-left-radius: .5rem; border-bottom-left-radius: .5rem;\">                \n              <div *ngIf=\"userDetail?.gender === 'Male'\">\n                <img src=\"../../assets/profile.jpg\" alt=\"Avatar\" class=\"img-fluid my-5\" style=\"width: 80px;\"/>\n              </div>\n              <div *ngIf=\"userDetail?.gender === 'Female'\">\n                <img src=\"../../assets/female.jpg\" alt=\"Avatar\" class=\"img-fluid my-5\" style=\"width: 80px;\"/>\n            </div> \n              <h5 style=\"font-weight: bold; color: black;\">{{ userDetail?.firstName }}</h5>\n            </div>\n            <div class=\"col-md-8\">\n              <div class=\"card-body p-4\">\n                <h6>Information</h6>\n                <hr class=\"mt-0 mb-4\">\n                <div class=\"row pt-1\">\n                  <div class=\"col-6 mb-3\">\n                    <h6>Email</h6>\n                    <p class=\"text-muted\">{{ userDetail?.emailId }}</p>\n                  </div>\n                  <div class=\"col-6 mb-3\">\n                    <h6>Date Of Birth</h6>\n                    <p class=\"text-muted\">{{ userDetail?.dateOfBirth | date}}</p>\n                  </div>\n                </div>\n                <div class=\"row pt-1\">\n                  <div class=\"col-6 mb-3\">\n                    <h6>Name</h6>\n                    <p class=\"text-muted\">{{ userDetail?.firstName }} {{ userDetail?.lastName }}</p>\n                  </div>\n                  <div class=\"col-6 mb-3\">\n                    <h6>Gender</h6>\n                    <p class=\"text-muted\">{{ userDetail?.gender }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { User } from '../user.model';\nimport { UserService } from '../user.service';\nimport { ViewUser } from '../view-user.model';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './search-user.component.html',\n  styleUrls: ['./search-user.component.css']\n})\nexport class SearchUserComponent implements OnInit, OnDestroy {\n  users: ViewUser[];\n  allUserSubscription : Subscription;  \n  userSubscription : Subscription;\n  userDetail : ViewUser;\n  constructor(private route: ActivatedRoute,private userService: UserService , private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param) => {\n      this.userService.getUsersById(param['id']);\n    });\n\n    this.allUserSubscription = this.userService.allUsers.subscribe((users) => {\n      this.users = users;\n      console.log(users);\n    });\n   \n  }\n\n  ngOnDestroy(){\n    this.allUserSubscription.unsubscribe();\n  }\n  OnNavigate(){\n    this.router.navigate(['tweetapp/home/users']);\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { User } from \"./user.model\";\nimport { ViewUser } from \"./view-user.model\";\n\n@Injectable({providedIn: 'root'})\nexport class UserService{\n\n    constructor(private http: HttpClient){}\n\n    userDetail = new Subject<ViewUser>();\n    allUsers = new Subject<ViewUser[]>();\n\n    getUsers(userId: string){\n        this.http.get<ViewUser>('http://localhost:48897/api/v1.0/tweets/user/search/'+userId).subscribe((user) => {\n            this.userDetail.next(user);\n        });\n    }\n\n    getAllUsers(){\n        this.http.get<ViewUser[]>('http://localhost:48897/api/v1.0/tweets/users/all').subscribe((users) => {\n            this.allUsers.next(users);\n        });\n    }\n\n    getUsersById(id : string){\n        this.http.get<ViewUser[]>('http://localhost:48897/api/v1.0/tweets/users/search/'+id).subscribe((users) => {\n            this.allUsers.next(users);\n        });\n    }\n\n    updateProfile(user: ViewUser, userId: string){\n        return this.http.put<boolean>('http://localhost:48897/api/v1.0/tweets/updateProfile/'+userId,\n        {\n            emailId : user.emailId,\n            firstName: user.firstName,\n            lastName: user.lastName,\n            password : \"password\",\n            confirmPassword : \"password\",            \n            dateofbirth : user.dateOfBirth,\n            gender : user.gender,\n            securityQuestion : 2,\n            securityAnswer : \"red\"\n        }\n        );\n    }\n\n}","<section class=\"align-section\" style=\"background-color: #f4f5f7;\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex h-100\">\n        <div class=\"col col-lg-6 mb-4 mb-lg-0\">\n          <div class=\"card mb-3\" style=\"border-radius: .5rem;\">\n            <div class=\"row g-0\">\n              <div class=\"col-md-4 gradient-custom text-center text-white\" style=\"border-top-left-radius: .5rem; border-bottom-left-radius: .5rem;\">\n                <span *ngIf=\"userDetail?.gender ==='Male'\">\n                  <img src=\"../../assets/male.jpg\" alt=\"Avatar\" class=\"img-fluid my-5\" style=\"width: 80px;\"\n                />\n                </span>\n                <span *ngIf=\"userDetail?.gender ==='Female'\">\n                  <img src=\"../../assets/female.jpg\" alt=\"Avatar\" class=\"img-fluid my-5\" style=\"width: 80px;\"\n                />\n                </span>\n                <h5 style=\"font-weight: bold; color: black;\">{{ userDetail?.firstName }}</h5>\n              </div>\n              <div class=\"col-md-8\">\n                <div class=\"card-body p-4\">\n                  <h6>Information</h6>\n                  <hr class=\"mt-0 mb-4\">\n                  <div class=\"row pt-1\">\n                    <div class=\"col-6 mb-3\">\n                      <h6>Email</h6>\n                      <p class=\"text-muted\">{{ userDetail?.emailId }}</p>\n                    </div>\n                    <div class=\"col-6 mb-3\">\n                      <h6>Date Of Birth</h6>\n                      <p class=\"text-muted\">{{ userDetail?.dateOfBirth | date}}</p>\n                    </div>\n                  </div>\n                  <div class=\"row pt-1\">\n                    <div class=\"col-6 mb-3\">\n                      <h6>Name</h6>\n                      <p class=\"text-muted\">{{ userDetail?.firstName }} {{ userDetail?.lastName }}</p>\n                    </div>\n                    <div class=\"col-6 mb-3\">\n                      <h6>Gender</h6>\n                      <p class=\"text-muted\">{{ userDetail?.gender }}</p>\n                    </div>\n                  </div>\n                  <div class=\"row pt-1\">\n                    <div class=\"col-6 mb-3\">\n                      <form>\n                        <a routerLink=\"../../../home/my-profile/update-profile/{{ userDetail?.emailId }}\"><button class=\"tweetBox__tweetButton\">Edit</button></a>                     \n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UserService } from '../user/user.service';\nimport { ViewUser } from '../user/view-user.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n\n  constructor(private route: ActivatedRoute, private userService: UserService, private router: Router) { }\n  userDetail: ViewUser;\n  userSubscription : Subscription;\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param) => {\n      this.userService.getUsers(param['id']);\n    });\n\n    this.userSubscription =  this.userService.userDetail.subscribe((userDetail) =>{\n      this.userDetail = userDetail;\n    })\n  }\n\n  ngOnDestroy(){\n    this.userSubscription.unsubscribe();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { map, tap } from \"rxjs/operators\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate{\n\n    constructor(private authService: AuthService, private router: Router){}\n\n    canActivate() \n        : boolean{\n            if(this.authService.isLoggedIn()){\n                return true;\n            }\n            this.router.navigate(['tweetapp']);\n            return false;\n        }\n}","<div class=\"post\">\n  <div class=\"post__avatar\">\n    <img src=\"../../assets/profile.jpg\" alt=\"\"/>\n  </div>\n  <div class=\"post__body\">\n    <div class=\"post__header\">\n      <div class=\"post__headerText\">\n        <h3> @{{ tweet.firstName }}\n          <span class=\"post__headerSpecial\">\n            <span class=\"material-icons post__badge\"> verified </span>\n          </span>\n         <span style=\"position: relative; float: right;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clock\" viewBox=\"0 0 16 16\">\n          <path d=\"M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z\"/>\n          <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z\"/>\n        </svg><i class=\"bi bi-clock\"></i> {{ calculateDiff(tweet.dateAndTimeOfTweet) }} d</span>\n        <!--<span style=\"position: relative; float: right;\">{{ tweet.dateAndTimeOfTweet | date :'short' }}</span>-->\n        </h3>\n      </div>\n      <div class=\"post__headerDescription\">\n        <p>{{ tweet.tweetText }}</p>\n      </div>\n    </div>\n\n    <div class=\"post__footer\">\n      <span class=\"material-icons footer-icons\" [routerLink]=\"['reply', tweet.id]\"> question_answer </span>\n      <div *ngIf=\"tweet.likes > 0\">\n        <span class=\"material-icons footer-icons red\" (click)=\"onLike(tweet.id)\">favorite </span>\n        <span class=\"tweet-like\" *ngIf=\"tweet.likes > 0\">{{ tweet.likes }}</span>  \n      </div>\n      <div *ngIf=\"tweet.likes == 0\">\n        <span class=\"material-icons footer-icons\" (click)=\"onLike(tweet.id)\">favorite_outline </span>\n      </div>\n      <div class=\"dropdown\" *ngIf=\"tweet.userId == userId\">\n        <a [routerLink]=\"['edit', tweet.id]\"><button class=\"btn\"><i class=\"bi bi-pencil\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil\" viewBox=\"0 0 16 16\">\n          <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\n        </svg></i></button></a>\n        <a (click)=\"onDelete(tweet.id)\"><button class=\"btn\"><i class=\"material-icons medium\">delete</i></button></a>\n      </div>\n    </div>\n  </div>\n</div>","import { DatePipe } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth.service';\nimport { User } from 'src/app/user/user.model';\nimport { UserService } from 'src/app/user/user.service';\nimport { ViewUser } from 'src/app/user/view-user.model';\nimport { Reply } from '../reply.model';\nimport { Tweet } from '../tweet.model';\nimport { TweetService } from '../tweet.service';\n\n@Component({\n  selector: 'app-tweet-items',\n  templateUrl: './tweet-items.component.html',\n  styleUrls: ['./tweet-items.component.css']\n})\nexport class TweetItemsComponent implements OnInit {\n  @Input() tweet: Tweet;\n  userId: string | null;\n  user:string;\n  userid :string =  localStorage.getItem('user') as string;\n constructor(private router: Router, private authService: AuthService, private tweetService: TweetService) { }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem('user');\n  }\n\n  onClick(){\n    this.router.navigate(['tweetapp/reply']);\n  }\n\n  onDelete(tweetId: string){\n    this.tweetService.deleteTweetFromHome(tweetId);\n  }\n\n  onLike(tweetId: string){\n    this.tweetService.likeOrDisLikeTweet(tweetId,this.userid);\n    this.router.navigate(['tweetapp/home']).then(() => {\n    window.location.reload();\n  });\n  }\n  calculateDiff(dateSent:any){\n    let currentDate = new Date();\n    dateSent = new Date(dateSent);\n    return Math.floor((Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate()) - Date.UTC(dateSent.getFullYear(), dateSent.getMonth(), dateSent.getDate()) ) /(1000 * 60 * 60 * 24));\n}\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/user/user.model';\nimport { UserService } from '../../user/user.service';\nimport { ViewUser } from '../../user/view-user.model';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './update-profile.component.html',\n  styleUrls: ['./update-profile.component.css']\n})\nexport class UpdateProfileComponent implements OnInit {\n  \n  constructor(private route: ActivatedRoute, private userService: UserService , private router: Router) { }\n  userDetail: ViewUser;\n  userSubscription : Subscription;\n  user : User;\n  isAccountUpdateSuccessfull = false;\n  firstName : string;\n  lastName : string;\n  dob:Date;\n  gender:string;\n  \n\n  ngOnInit(): void {\n    this.route.params.subscribe((param) => {\n      this.userService.getUsers(param['id']);\n    });\n\n    this.userSubscription =  this.userService.userDetail.subscribe((userDetail) =>{\n      this.userDetail = userDetail,\n      this.firstName= userDetail.firstName,\n      this.lastName = userDetail.lastName\n    })\n  }\n\n  \n\nonSubmit(form : NgForm){\n  if(!form.valid){\n    return;\n  }\n  const userDetail = new ViewUser(\n    this.userDetail.emailId,\n    form.value.dob, \n    form.value.gender,\n    form.value.firstName,\n    form.value.lastName\n    );\n    this.userService.updateProfile(userDetail,this.userDetail.emailId).subscribe((res) =>{\n      if(res){\n        this.isAccountUpdateSuccessfull = true;        \n        this.router.navigate(['tweetapp/home/my-profile/'+this.userDetail.emailId])\n        .then(() => {\n          window.location.reload();        \n      });\n    }});    \n}\n}\n","<section class=\"align-section\" style=\"background-color: #f4f5f7;\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex h-100\">\n        <div class=\"col col-lg-6 mb-4 mb-lg-0\">\n          <div class=\"card mb-3\" style=\"border-radius: .5rem;\">\n            <div class=\"row g-0\">\n              <div class=\"col-md-4 gradient-custom text-center text-white\" style=\"border-top-left-radius: .5rem; border-bottom-left-radius: .5rem;\">\n                <span *ngIf=\"userDetail?.gender ==='Male'\">\n                  <img src=\"../../assets/male.jpg\" alt=\"Avatar\" class=\"img-fluid my-5\" style=\"width: 80px;\"\n                />\n                </span>\n                <span *ngIf=\"userDetail?.gender ==='Female'\">\n                  <img src=\"../../assets/female.jpg\"  alt=\"Avatar\" class=\"img-fluid my-5\" style=\"width: 80px;\"\n                />\n                </span>             \n              </div>            \n              <div class=\"col-md-8\">\n                <div class=\"card-body p-4\">\n                  <h6>Update Profile</h6>\n                  <hr class=\"mt-0 mb-4\">\n                  <form #updateForm=\"ngForm\" (ngSubmit)=\"onSubmit(updateForm)\">                    \n                    <div class=\"form-group\" id=\"firstName\" name=\"firstName\">                                         \n                        <label for=\"firstName\">First Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" placeholder=\"Enter First Name\" [(ngModel)]=\"firstName\" >\n                    </div> \n                    <div class=\"form-group\">\n                        <label for=\"lastName\">Last Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" placeholder=\"Enter Last Name\" [(ngModel)]=\"lastName\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"dob\">Date Of Birth</label>\n                        <input type=\"date\" class=\"form-control\" id=\"dob\" name=\"dob\" placeholder=\"Enter DateOfBirth\" [(ngModel)]=\"dob\" >\n                    </div>                            \n                    <div class=\"form-group\">\n                        <label for=\"gender\">Gender</label>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"Male\" id=\"genderMale\" [(ngModel)]=\"gender\">\n                                <label class=\"form-check-label\" for=\"gender\">\n                                    Male\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"Female\" id=\"genderFemale\" [(ngModel)]=\"gender\">\n                                <label class=\"form-check-label\" for=\"gender\">\n                                    Female\n                                </label>\n                            </div>\n                    </div>\n                    <div class = \"form-group\">\n                        <button type=\"submit\" class=\"btn btn-update\">Save</button> \n                    </div>\n                  </form>      \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>","<div class=\"container reset-form\" *ngIf=\"!isValid\">\n    <form #verify=\"ngForm\" (ngSubmit)=\"onSubmit(verify)\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <input type=\"text\" \n                class=\"form-control\" \n                placeholder=\"Enter UserID Or EmailID\" \n                required\n                name=\"email\"\n                email\n                ngModel\n                #email=\"ngModel\">\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <select class=\"form-select\" \n                        required \n                        name=\"question\"\n                        ngModel\n                        #question=\"ngModel\"\n                        >\n                    <option value=\"\" disabled> - Select Security Question - </option>\n                    <option *ngFor=\"let option of options\" [value]=\"option.key\">{{ option.value }}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <input \n                    type=\"text\" \n                    class=\"form-control\" \n                    placeholder=\"Security Selected Question's Answer\" \n                    required\n                    name=\"answer\"\n                    ngModel\n                    #answer=\"ngModel\">\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!verify.valid\">Verify</button> &nbsp; &nbsp; &nbsp; &nbsp;\n                    <button class=\"btn btn-primary\" (click)=\"OnNavigate()\">Back</button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div class=\"container reset-form\" *ngIf=\"isValid && !isPasswordResetSuccessfull\">\n    <div class=\"alert alert-success\" role=\"alert\">\n        Verification Successfully Completed! Please Reset Your Password!\n      </div>\n    <form #resetPassword=\"ngForm\" (ngSubmit)=\"onReset(resetPassword)\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <input \n                    type=\"password\"\n                    class=\"form-control\" \n                    placeholder=\"Enter New Password\" \n                    required\n                    name=\"password\"\n                    ngModel\n                    #password=\"ngModel\">\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <input \n                    type=\"password\" \n                    class=\"form-control\" \n                    placeholder=\"Confirm password\" \n                    required\n                    name=\"confirmPassword\"\n                    ngModel\n                    #confirmPassword=\"ngModel\"\n                    >\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!resetPassword.valid\">Reset Password</button>\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"alert alert-success\" role=\"alert\" *ngIf=\"isPasswordResetSuccessfull\">\n    Password successfully changed!\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  options = [\n    {key: 1, value:\"Favorite Movie\"},\n    {key: 2, value:\"Favorite Color\"},\n    {key: 3, value:\"Favorite Cuisine\"},\n    {key: 4, value:\"Favorite Sport\"}\n  ]\n  constructor(private authService: AuthService, private router: Router) { }\n  isValid = false;\n  emailId = '';\n  isPasswordResetSuccessfull = false;\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: NgForm){\n    this.emailId = form.value.email;\n    this.authService.SecurityCheckValidation(form.value.email, +form.value.question, form.value.answer).subscribe((res) => {\n      this.isValid = res;\n    });\n  }\n\n  onReset(form: NgForm){\n    this.authService.resetPassword(this.emailId, form.value.password).subscribe((res) =>{\n      if(res){\n        this.isPasswordResetSuccessfull = true;\n        setTimeout(() => {\n          this.router.navigate(['tweetapp']);\n        },2000);\n      }\n    });\n  }\n  OnNavigate(){\n    this.router.navigate(['tweetapp/','home']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport { TweetComponent } from './tweet/tweet.component';\nimport { UserComponent } from './user/user.component';\nimport { SearchUserComponent } from './user/search-user/search-user.component';\nimport { TweetItemsComponent } from './tweet/tweet-items/tweet-items.component';\nimport { PostTweetComponent } from './tweet/post-tweet/post-tweet.component';\nimport { TweetService } from './tweet/tweet.service';\nimport { AuthService } from './auth.service';\nimport { UserService } from './user/user.service';\nimport { ReplyTweetComponent } from './tweet/reply-tweet/reply-tweet.component';\nimport { EditTweetComponent } from './tweet/edit-tweet/edit-tweet.component';\nimport { FormsModule ,  ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AuthGuard } from './auth-guard';\nimport { MyTweetsComponent } from './tweet/my-tweets/my-tweets.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { UpdateProfileComponent } from './profile/updateProfile/update-profile.component';\nimport { ResetPasswordComponent } from './register/reset-password/reset-password.component';\nimport { ErrorComponent } from './error/error.component';\nimport { EmailVerificationComponent } from './email-verification/email-verification.component';\nimport { NotifyUserComponent } from './user/notify-user/notify-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    RegisterComponent,\n    HeaderComponent,\n    TweetComponent,\n    UserComponent,\n    TweetItemsComponent,\n    PostTweetComponent,\n    ReplyTweetComponent,\n    EditTweetComponent,\n    MyTweetsComponent,\n    ProfileComponent,\n    ResetPasswordComponent,\n    ErrorComponent,\n    UpdateProfileComponent,\n    SearchUserComponent,\n    EmailVerificationComponent,\n    NotifyUserComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [HttpClientModule, AuthService, UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"feed\">\r\n    <div class=\"feed__header\">\r\n      <h2>Notifications</h2> \r\n    </div>\r\n    <div *ngFor=\"let tweet of tweets\">      \r\n        <div class=\"post__body\">       \r\n              <div class=\"post__headerText\"  *ngFor=\"let reply of tweet.replies\">\r\n              <div *ngIf=\"reply.notification\">\r\n                <h3><b>{{reply.firstName +\" \"+ reply.lastName}}</b> replied <b>{{reply.replyText}}</b> to your tweet <b style=\"color: rgb(30, 167, 201);\">{{tweet.tweetText}}</b></h3>\r\n              </div> \r\n        </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Tweet } from 'src/app/tweet/tweet.model';\r\nimport { TweetService } from 'src/app/tweet/tweet.service';\r\nimport { User } from '../user.model';\r\nimport { UserService } from '../user.service';\r\nimport { ViewUser } from '../view-user.model';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './notify-user.component.html',\r\n  styleUrls: ['./notify-user.component.css']\r\n})\r\nexport class NotifyUserComponent implements OnInit, OnDestroy {\r\n  users: ViewUser[];\r\n  tweets: Tweet[]; \r\n  userId:string;\r\n  tweetSubscription : Subscription;\r\n  userDetail : ViewUser;\r\n  constructor(private route: ActivatedRoute,private userService: UserService , private tweetService: TweetService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((param) => {\r\n      this.tweetService.getTweetByUserId(param['id']),\r\n      this.userId=param['id'];\r\n    });\r\n\r\n    this.tweetSubscription =  this.tweetService.allTweets.subscribe((tweets) => {\r\n      console.log(tweets);\r\n      this.tweets = tweets;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.tweetService.inActivateReply(this.userId);\r\n    window.location.reload();\r\n  }\r\n}","import { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { EventEmitter, Injectable } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\nimport { User } from \"./user/user.model\";\nimport { ViewUser } from \"./user/view-user.model\";\nimport {catchError} from 'rxjs/operators';\nimport { throwError } from \"rxjs\";\nimport {tap} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class AuthService{\n    userDetail = new Subject<ViewUser | null>();\n    selectedValue = new EventEmitter<string>();\n    userId = new Subject<string | null>();\n    userOtp : string;\n    constructor(private http: HttpClient){}\n\n    signUp(userDetail: User){\n        return this.http.post('http://localhost:48897/api/v1.0/tweets/register', userDetail);\n    }\n\n    login(emailId: string, password: string){\n        return this.http.post<ViewUser>('http://localhost:48897/api/v1.0/tweets/login', {\n            emailId: emailId,\n            password: password\n        }).pipe( catchError(this.handleError), tap(responseData => {\n            const user = new ViewUser(\n                responseData.emailId, \n                responseData.dateOfBirth, \n                responseData.gender, \n                responseData.firstName, \n                responseData.lastName);\n            this.userDetail.next(user);\n            localStorage.setItem('user', user.emailId);\n            localStorage.setItem('gender',user.gender);\n        }));\n    }\n\n    isLoggedIn(){\n        return localStorage.getItem('user') ? true : false;\n    }\n\n    logout(){\n        this.userDetail.next(null);\n        localStorage.clear();\n    }\n\n    SecurityCheckValidation(emailId: string, question: number, answer: string){\n        return this.http.put<boolean>('http://localhost:48897/api/v1.0/tweets/forgot', {\n            emailId : emailId,\n            securityQuestion: question,\n            securityAnswer: answer\n        });\n    }\n\n    resetPassword(userId: string, newPassword: string){\n        return this.http.put<boolean>('http://localhost:48897/api/v1.0/tweets/resetPassword/'+userId,\n        {\n            oldPassword: \"Some random value!\",\n            newPassword: newPassword\n        });\n    }\n\n    mailSend(userId:string){\n       return this.http.get<any>('http://localhost:48897/api/v1.0/tweets/users/mail/'+ userId).subscribe((data)=>{\n           this.userOtp = data;\n           localStorage.setItem('userOtp',this.userOtp);\n       });\n    }\n    \n    private handleError(errorRes: HttpErrorResponse){\n        console.log(errorRes); \n        let errorMessage = 'An internal server error occurred!';\n\n        if(!errorRes.error || !errorRes.error.errorMessage){\n            return throwError(errorMessage);\n        }\n        errorMessage = errorRes.error.errorMessage;\n        return throwError(errorMessage);\n    }\n}","<div class=\"feed\">\n    <div class=\"feed__header\">\n      <h2>My Tweets</h2> \n    </div>\n\n    <div class=\"post\" *ngFor=\"let tweet of tweets\">\n        <div class=\"post__avatar\">\n          <img src=\"../../assets/profile.jpg\" alt=\"\"/>\n        </div>\n      \n        <div class=\"post__body\">\n          <div class=\"post__header\">\n            <div class=\"post__headerText\">\n              <h3>\n                @{{ tweet.firstName }}\n                <span class=\"post__headerSpecial\">\n                  <span class=\"material-icons post__badge\"> verified </span>\n                </span>\n                <span style=\"position: relative; float: right;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clock\" viewBox=\"0 0 16 16\">\n                  <path d=\"M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z\"/>\n                  <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z\"/>\n                </svg><i class=\"bi bi-clock\"></i> {{ calculateDiff(tweet.dateAndTimeOfTweet) }} d</span>\n              </h3>\n              \n            </div>\n            <div class=\"post__headerDescription\">\n              <p>{{ tweet.tweetText }}</p>\n            </div>\n          </div>\n      \n          <div class=\"post__footer\">\n            <span class=\"material-icons footer-icons\" routerLink=\"../../../tweets/reply/{{ tweet.id }}\"> question_answer </span>\n            <div *ngIf=\"tweet.likes > 0\">\n              <span class=\"material-icons footer-icons\" (click)=\"onLike(tweet.id, tweet.userId)\"> favorite</span>\n              <span class=\"tweet-like\" *ngIf=\"tweet.likes>0\">{{ tweet.likes }}</span>\n            </div>\n            <div *ngIf=\"tweet.likes == 0\">\n              <span class=\"material-icons footer-icons\" (click)=\"onLike(tweet.id, tweet.userId)\">favorite_outline </span>\n            </div>\n            <div class=\"dropdown\">\n              <a routerLink=\"../../../tweets/edit/{{ tweet.id }}\"><button class=\"btn\"><i class=\"bi bi-pencil\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil\" viewBox=\"0 0 16 16\">\n                <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\n              </svg></i></button></a>\n              <a (click)=\"onDelete(tweet.id, tweet.userId)\"><button class=\"btn\"><i class=\"material-icons\">delete</i></button></a>\n            </div>\n          </div>\n        </div>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Tweet } from '../tweet.model';\nimport { TweetService } from '../tweet.service';\n\n@Component({\n  selector: 'app-my-tweets',\n  templateUrl: './my-tweets.component.html',\n  styleUrls: ['./my-tweets.component.css']\n})\nexport class MyTweetsComponent implements OnInit, OnDestroy {\n  tweets: Tweet[];\n  tweetSubscription : Subscription;\n  userGender:string = localStorage.getItem('gender') as string;\n  constructor(private tweetService: TweetService, private route : ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param) => {\n      this.tweetService.getTweetByUserId(param['id']);\n    });\n\n    this.tweetSubscription =  this.tweetService.allTweets.subscribe((tweets) => {\n      console.log(tweets);\n      this.tweets = tweets;\n    });\n  }\n\n  onDelete(tweetId: string, userId: string){\n    this.tweetService.deleteTweetFromMyTweet(tweetId, userId);\n  }\n\n  onLike(tweetId: string, userId: string){\n    this.tweetService.likeOrDisLikeTweet(tweetId,userId);\n  }\n\n  ngOnDestroy(){\n    this.tweetSubscription.unsubscribe();\n  }\n  calculateDiff(dateSent:any){\n    let currentDate = new Date();\n    dateSent = new Date(dateSent);\n    return Math.floor((Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate()) - Date.UTC(dateSent.getFullYear(), dateSent.getMonth(), dateSent.getDate()) ) /(1000 * 60 * 60 * 24));\n}\n}\n","import { ThrowStmt } from '@angular/compiler';\nimport { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\nimport { TweetService } from '../tweet/tweet.service';\nimport { ViewUser } from '../user/view-user.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  menuOptions = [{icon: \"home\", labelName: \"Home\"}, \n  {icon: \"search\", labelName: \"Search\"},\n  {icon: \"notifications_none\", labelName: \"Notifications\"},\n  {icon: \"mail_outline\", labelName: \"Messages\"},\n  {icon: \"bookmark_border\", labelName: \"Bookmarks\"},\n  {icon: \"list_alt\", labelName: \"Lists\"},\n  {icon: \"perm_identity\", labelName: \"Profiles\"},\n  {icon: \"more_horiz\", labelName: \"More\"}\n]\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute ,private tweetService : TweetService) { }\n  user : ViewUser | null;\n  userId: string | null;\n  count : string;\n  authSubscription : Subscription;\n  tweetSubscription : Subscription;\n  isCount : boolean = false;\n  validCount:number;\n  ngOnInit(): void {\n   \n    this.authSubscription = this.authService.userDetail.subscribe((user) => {\n      this.user = user;\n    })  \n    this.userId = localStorage.getItem('user');\n  }\n\n getCount(){\n  this.userId = localStorage.getItem('user') as string;\n  if(this.userId){      \n    this.tweetService.getActiveReplies(this.userId);\n  }\n  this.count = localStorage.getItem('count') as string;\n  this.validCount = +this.count;\n  if(this.validCount > 0){\n    return this.validCount;\n  }\n  else{\n    this.isCount = false;\n    return this.count;\n  }\n }\n\n  onSelect(value: string){\n    this.authService.selectedValue.emit(value);    \n  } \n\n  onLogout(){\n    this.authService.logout();\n    this.router.navigate(['tweetapp']);\n  }\n\n  ngOnDestroy(){\n    this.authSubscription.unsubscribe();\n  }\n}","<!-- sidebar starts -->\n<div class=\"sidebar\">\n  <i class=\"fab fa-twitter\"></i>\n  <div class=\"sidebarOption\" routerLinkActive=\"active\" routerLink='tweets'>\n    <span class=\"material-icons\"> home </span>\n    <h2>Home</h2>\n  </div>\n\n  <div class=\"sidebarOption\" routerLinkActive=\"active\" [routerLink]=\"['users']\">\n    <span class=\"material-icons\"> search </span>\n    <h2>Explore</h2>\n  </div>\n\n  <div class=\"sidebarOption\" routerLinkActive=\"active\" [routerLink]=\"['mytweets/user/', userId]\">\n    <span class=\"material-icons\"> list_alt </span>\n    <h2>My Tweets</h2>\n  </div>\n\n  <div class=\"sidebarOption\" routerLinkActive=\"active\" [routerLink]=\"['my-profile/', userId]\">\n    <span class=\"material-icons\"> perm_identity </span>\n    <h2>Profile</h2>\n  </div>\n\n  <div class=\"sidebarOption\" routerLinkActive=\"active\" [routerLink]=\"['users/notify-user/', userId]\">\n    <span class=\"material-icons\"> notifications_active<span class=\"circle\"></span></span>\n    <h2>Notifications</h2>    \n  </div>\n\n  <div class=\"sidebarOption\" (click)=\"onLogout()\">\n    <span class=\"material-icons\"> logout </span>\n    <h2>LogOut</h2>\n  </div>\n</div>\n<!-- sidebar ends -->","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth-guard';\nimport { ErrorComponent } from './error/error.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ResetPasswordComponent } from './register/reset-password/reset-password.component';\nimport { EditTweetComponent } from './tweet/edit-tweet/edit-tweet.component';\nimport { MyTweetsComponent } from './tweet/my-tweets/my-tweets.component';\nimport { ReplyTweetComponent } from './tweet/reply-tweet/reply-tweet.component';\nimport { TweetComponent } from './tweet/tweet.component';\nimport { UserComponent } from './user/user.component';\nimport { SearchUserComponent } from './user/search-user/search-user.component';\nimport { UpdateProfileComponent } from './profile/updateProfile/update-profile.component';\nimport { EmailVerificationComponent } from './email-verification/email-verification.component';\nimport { NotifyUserComponent } from './user/notify-user/notify-user.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'tweetapp', pathMatch: \"full\"},\n  {path: 'tweetapp/email-verification', component:EmailVerificationComponent},\n  {path: 'tweetapp/home', component: HomeComponent, children: [\n    {path: 'tweets/reply/:id', component: ReplyTweetComponent},\n    {path: 'tweets/edit/:id', component: EditTweetComponent},\n    {path: 'users', component: UserComponent},\n    {path: 'mytweets/user/:id', component: MyTweetsComponent},\n    {path: 'my-profile/:id', component: ProfileComponent},\n    {path: 'tweets', component: TweetComponent},\n    {path: 'my-profile/update-profile/:id',component: UpdateProfileComponent},\n    {path: 'users/notify-user/:id',component: NotifyUserComponent},\n    {path:'users/search-user/:id' , component:SearchUserComponent},\n    {path: '', redirectTo: 'tweets',pathMatch: 'full'}\n  ], canActivate:[AuthGuard]},\n  {path: 'tweetapp', component: RegisterComponent},\n  {path: 'tweetapp/reset-password', component: ResetPasswordComponent},     \n  {path: '**', component: ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"feed\">\n  <div class=\"feed__header\">\n    <h2>Your Feed</h2> \n  </div>\n  <app-post-tweet></app-post-tweet>   \n  <app-tweet-items *ngFor=\"let tweetEl of tweets\" [tweet]=\"tweetEl\"></app-tweet-items>\n</div>\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Tweet } from './tweet.model';\nimport { TweetService } from './tweet.service';\n\n@Component({\n  selector: 'app-tweet',\n  templateUrl: './tweet.component.html',\n  styleUrls: ['./tweet.component.css']\n})\nexport class TweetComponent implements OnInit, OnDestroy {\n  tweets: Tweet[];\n  userId : string;\n  private allTweets: Subscription;\n  constructor(private tweetService: TweetService , private router: Router) { }\n\n  ngOnInit(): void {\n    this.tweetService.getAllTweets();\n     this.allTweets = this.tweetService.allTweets.subscribe((value: Tweet[]) => {\n      this.tweets = value;\n     });    \n  }\n  ngOnDestroy(): void {\n      this.allTweets.unsubscribe();\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}